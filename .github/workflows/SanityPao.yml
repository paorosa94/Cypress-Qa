#*🤖Este Pipeline de CI se activa al PUSHEAR o MERGEAR en ramas de tareas que no sean QA ni Main, y consiste en ejecutar los tests de una US e importar los resultados a Jira!🚀
#*👩🏻‍🔬Para utilizar este Pipeline de Ari, sigue los siguientes pasos:
#todo: 1 -> Crea tu propio archivo sanity.yml con tu username de GitHub, ejemplo sanity-saiotest.yml
#todo: 2 -> Copia el contenido de este archivo yml y pégalo en tu nuevo archivo yml con tu username.
#todo: 3 -> Modifica el trigger del Push en donde dice "TuBranchAqui", coloca tu nombre tal cual de tu rama git.
#todo: 4 -> Modifica el archivo de prueba a ejectuar en el script del "yarn test" (ver ejemplo en este archivo)
#todo: 5 -> Modifica la propiedad: "testExecKey" con tu ID del TX de Jira para importar automáticamente el resultado.
#todo: 6 -> Recuerda modificar el projectKey correspondiente, si estás en L3, debe ser GX3 y así...
#todo: 7 -> Listo! Guarda los cambios (git add + git commit) y pushea (git push) para ejectutar este Pipeline!
#*Resultado: Debería ejecutarse este Pipeline de GitHub Actions y correr cada uno de los Jobs declarados aquí.

name: 🧪Pipeline SanityTest
run-name: ${{github.actor}}👨🏻‍🔬 triggered SanityTest in ${{github.ref_name}}

on:
  push:
    branches: ['Prueba'] #! Cambia "TuBranchAqui" por el nombre de tu rama de tarea.
  workflow_dispatch:


jobs:
  SanityTest:
    runs-on: ubuntu-latest

    steps:
    - name: 💻Checkout
      uses: actions/checkout@v4

    - name: 💿Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: 🍙 Bun Setup
      uses: oven-sh/setup-bun@v1

    - name: 🧬Install All Dependencies
      run: |
        bun install

    - name: 🧪Cypress Run Test Coverage
      uses: cypress-io/github-action@v4
      with:
        browser: chrome
        command: | #todo: EDITAR AQUÍ EL ARCHIVO SUITE A EJECUTAR:
          bun run test:chrome cypress/e2e/Tests/Checkout/GX3-1870_spaceCheckout.cy.ts

     #* Esto es para guardar el reporte previamente generado y colocarlo en Github.
    - name: 📊Upload Artifact ☕Mochawesome HTML Report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: mochaTest-report
        path: mochawesome-report
    #? el argumento "if: always()" es un comando condicional: significa que Si pasa exitosamente o no el paso anterior, corre este Paso.